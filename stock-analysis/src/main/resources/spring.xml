<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!--<bean id="jsonMapper" class="org.codehaus.jackson.map.ObjectMapper" 
		/> -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:init.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>

	<!-- wro静态资源压缩 -->
	<bean id="wroFilter" class="ro.isdc.wro.http.ConfigurableWroFilter">
		<property name="properties" ref="wroProperties" />
	</bean>
	<bean id="wroProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:wro.properties" />
	</bean>



	<bean id="BaseDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="acquireIncrement" value="5" />

		<property name="idleConnectionTestPeriod" value="270" />

		<property name="maxIdleTime" value="600" />
		<property name="maxConnectionAge" value="0" />

		<property name="maxStatements" value="20000" />
		<property name="maxStatementsPerConnection" value="300" />
		<property name="numHelperThreads" value="20" />
		<property name="maxAdministrativeTaskTime" value="30" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="autoCommitOnClose" value="false" />

		<property name="automaticTestTable" value="Test" />
		<!-- <property name="preferredTestQuery" value="select id from test where 
			id=1" /> -->
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="checkoutTimeout" value="3000" />
		<property name="factoryClassLocation" value="" />
		<property name="forceIgnoreUnresolvedTransactions" value="false" />
		<property name="propertyCycle" value="300" />

		<property name="testConnectionOnCheckout" value="true" />

		<property name="testConnectionOnCheckin" value="false" />
		<property name="usesTraditionalReflectiveProxies" value="false" />
	</bean>
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" parent="BaseDataSource">
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="maxPoolSize" value="${datasource.maxActive}" />
		<property name="minPoolSize" value="${datasource.minActive}" />
		<property name="initialPoolSize" value="3" />
	</bean> -->
	
	<bean id="abstractDataSource" abstract="true"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${datasource.driverClassName}" />
		
		<property name="acquireIncrement" value="5" />
		
		<property name="idleConnectionTestPeriod" value="270" />
		
		<property name="maxIdleTime" value="600" />
		<property name="maxConnectionAge" value="0" />

		<property name="maxStatements" value="20000" />
		<property name="maxStatementsPerConnection" value="300" />
		<property name="numHelperThreads" value="20" />
		<property name="maxAdministrativeTaskTime" value="30" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="acquireRetryDelay" value="1000" />
		<property name="autoCommitOnClose" value="false" />

		<property name="automaticTestTable" value="Test" />
		<!-- <property name="preferredTestQuery" value="select id from test where 
			id=1" /> -->
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="checkoutTimeout" value="30000" />
		<property name="factoryClassLocation" value="" />
		<property name="forceIgnoreUnresolvedTransactions" value="false" />
		<property name="propertyCycle" value="300" />
		
		<property name="testConnectionOnCheckout" value="true" />
		
		<property name="testConnectionOnCheckin" value="false" />
		<property name="usesTraditionalReflectiveProxies" value="false" />
	</bean>
	
	<bean id="defDS" parent="abstractDataSource">
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
	</bean>
	
	<bean id="gszDS" parent="abstractDataSource">
		<property name="jdbcUrl" value="${datasource.g_sz.url}" />
		<property name="user" value="${datasource.g_sz.username}" />
		<property name="password" value="${datasource.g_sz.password}" />
	</bean>
	
	<bean id="gshDS" parent="abstractDataSource">
		<property name="jdbcUrl" value="${datasource.g_sh.url}" />
		<property name="user" value="${datasource.g_sh.username}" />
		<property name="password" value="${datasource.g_sh.password}" />
	</bean>

	<!-- 一个master和一个slaver 读写分离的数据源 -->
	<bean id="routingDS" class="com.st.framework.utils.db.route.RoutingDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="ds" value-ref="defDS"></entry>			
				<entry key="gsz" value-ref="gszDS"></entry>
				<entry key="gsh" value-ref="gshDS"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="defDS"></property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="routingDS" />
		<property name="configLocation" value="classpath:mybatis-configration.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/st/**/module/**/*.xml</value>
			</list>
		</property>

	</bean>
	
	
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
	    <constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>

	<!-- <bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean> -->

	<!-- 配置事务 -->
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="move*" rollback-for="Exception" />
			<tx:method name="remove*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
			<tx:method name="del*" rollback-for="Exception" />
			<tx:method name="add*" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="create*" rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.st.framework.business..*Manager.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.st.analysis.business..*Manager.*(..))"
			advice-ref="txAdvice" />

	</aop:config>
 -->

	<aop:aspectj-autoproxy />
	<context:annotation-config />


	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.st">
		<context:exclude-filter type="annotation"
			expression="org.springframework.context.annotation.Configuration" />
	</context:component-scan>



</beans>