<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.st.framework.persistence.mapper.stock.FactActiveDateIdIndexMapper" >
  <resultMap id="BaseResultMap" type="com.st.framework.module.stock.FactActiveDateIdIndex" >
    <id column="STOCK_CODE" property="stockCode" jdbcType="INTEGER" />
    <id column="DATE_ID" property="dateId" jdbcType="INTEGER" />
    <result column="DATE_YEAR_ID" property="dateYearId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    STOCK_CODE, DATE_ID, DATE_YEAR_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.st.framework.module.stock.example.FactActiveDateIdIndexExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from FACT_ACTIVE_DATE_ID_INDEX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.st.framework.module.stock.FactActiveDateIdIndexKey" >
    select 
    <include refid="Base_Column_List" />
    from FACT_ACTIVE_DATE_ID_INDEX
    where STOCK_CODE = #{stockCode,jdbcType=INTEGER}
      and DATE_ID = #{dateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.st.framework.module.stock.FactActiveDateIdIndexKey" >
    delete from FACT_ACTIVE_DATE_ID_INDEX
    where STOCK_CODE = #{stockCode,jdbcType=INTEGER}
      and DATE_ID = #{dateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.st.framework.module.stock.example.FactActiveDateIdIndexExample" >
    delete from FACT_ACTIVE_DATE_ID_INDEX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.st.framework.module.stock.FactActiveDateIdIndex" >
    insert into FACT_ACTIVE_DATE_ID_INDEX (STOCK_CODE, DATE_ID, DATE_YEAR_ID
      )
    values (#{stockCode,jdbcType=INTEGER}, #{dateId,jdbcType=INTEGER}, #{dateYearId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.st.framework.module.stock.FactActiveDateIdIndex" >
    insert into FACT_ACTIVE_DATE_ID_INDEX
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stockCode != null" >
        STOCK_CODE,
      </if>
      <if test="dateId != null" >
        DATE_ID,
      </if>
      <if test="dateYearId != null" >
        DATE_YEAR_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stockCode != null" >
        #{stockCode,jdbcType=INTEGER},
      </if>
      <if test="dateId != null" >
        #{dateId,jdbcType=INTEGER},
      </if>
      <if test="dateYearId != null" >
        #{dateYearId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.st.framework.module.stock.example.FactActiveDateIdIndexExample" resultType="java.lang.Integer" >
    select count(*) from FACT_ACTIVE_DATE_ID_INDEX
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update FACT_ACTIVE_DATE_ID_INDEX
    <set >
      <if test="record.stockCode != null" >
        STOCK_CODE = #{record.stockCode,jdbcType=INTEGER},
      </if>
      <if test="record.dateId != null" >
        DATE_ID = #{record.dateId,jdbcType=INTEGER},
      </if>
      <if test="record.dateYearId != null" >
        DATE_YEAR_ID = #{record.dateYearId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update FACT_ACTIVE_DATE_ID_INDEX
    set STOCK_CODE = #{record.stockCode,jdbcType=INTEGER},
      DATE_ID = #{record.dateId,jdbcType=INTEGER},
      DATE_YEAR_ID = #{record.dateYearId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.st.framework.module.stock.FactActiveDateIdIndex" >
    update FACT_ACTIVE_DATE_ID_INDEX
    <set >
      <if test="dateYearId != null" >
        DATE_YEAR_ID = #{dateYearId,jdbcType=INTEGER},
      </if>
    </set>
    where STOCK_CODE = #{stockCode,jdbcType=INTEGER}
      and DATE_ID = #{dateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.st.framework.module.stock.FactActiveDateIdIndex" >
    update FACT_ACTIVE_DATE_ID_INDEX
    set DATE_YEAR_ID = #{dateYearId,jdbcType=INTEGER}
    where STOCK_CODE = #{stockCode,jdbcType=INTEGER}
      and DATE_ID = #{dateId,jdbcType=INTEGER}
  </update>
  
  <insert id="insertBatch" parameterType="map" >
    insert ignore into FACT_ACTIVE_DATE_ID_INDEX
	(<include refid="Base_Column_List" />)
	values
	<foreach collection="list" item="item" index="index" separator=",">
		(#{item.stockCode},#{item.dateId},#{item.dateYearId})
	</foreach>
  </insert>
</mapper>